apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: 968644489163.dkr.ecr.us-east-1.amazonaws.com/pedelogo-catalogo:v1.0.0
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443 # Fins didáticos. Não será usada.
          name: https
        imagePullPolicy: IfNotPresent
        livenessProbe: # Verifica statuscode 200 por (1 * 5) = 5s e após isso faz o restart do pod.
          httpGet:
            path: /health
            port: 80
          failureThreshold: 1
          periodSeconds: 5
        readinessProbe: # Verifica statuscode 200 por (1 * 5) = 5s e após isso remove o endpoint não permitindo que sejam enviadas requisições para o pod até que o statuscode seja 200. Mas a pag de verificação deve ser diferente do livenessProbe.
          httpGet:
            path: /read
            port: 80
          failureThreshold: 1
          periodSeconds: 5
        startupProbe: # Aguarda statuscode 200 por (3 * 10) = 30s e após isso o livenessprobe poderá fazer suas verificações.
          httpGet:
            path: /health
            port: 80
          failureThreshold: 3
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: api-configmap
        env:
        - name: Mongo__User
          valueFrom:
            secretKeyRef:
              key: MONGO_INITDB_ROOT_USERNAME
              name: mongodb-secret
        - name: Mongo__Password
          valueFrom:
            secretKeyRef:
              key: MONGO_INITDB_ROOT_PASSWORD
              name: mongodb-secret
      imagePullSecrets:
      - name: ecr-registry
